---
title: "Desarrollo de un sitio web para la sistematización de la EVM en el contexto del SIMOCUTE"
author: "Manuel Vargas"
date: "2022-10-12"
format:
  revealjs: 
    theme: dark
editor: visual
---

## Contenidos

- Requerimientos para la sistematización de la EVM.
- Herramientas para el desarrollo de documentos técnicos y científicos.
- Markdown, R y Quarto.
- Git y Github.
- Sistematización de la documentación de FIESTA.

## Evaluación visual multitemporal
- La evaluación visual multitemporal (EVM) es una metodología innovadora que proporciona información consistente y periódica acerca de la composición de la cobertura o uso de la tierra.
- Su implementación requiere del manejo de diferentes tipos de datos y del uso de herramientas especializadas como sistemas de información geográfica (SIG) y programas estadísticos, entre otros.

## Sistematización de la EVM
- Es conveniente automatizar el procesamiento de los datos por medio de lenguajes de programación (ej. R, Python).
- La sistematización de la metodología requiere de la elaboración de documentos técnicos con notación científica, así como de la inclusión de tablas, gráficos estadísticos, mapas, figuras, citas bibliográficas y código fuente, entre otros elementos.

---

```{r}
#| label: vega-araya-2021
#| fig-cap: "Documento con bloque de código en R y mapa resultante. Fuente: (Vega-Araya, 2021)."
#| echo: false
knitr::include_graphics(rep("img/vega-araya-2021.png"))
```

## Documentos computacionales

:::: {.columns}

::: {.column width="50%"}

- Son documentos que incorporan el código fuente requerido para la generación de sus componentes.
- Facilitan la automatización y la reproducibilidad.
- "*More than 70% of researchers have tried and failed to reproduce another scientist's experiments*" (Baker, 2016).

:::

::: {.column width="50%"}

```{r}
#| label: baker-2016
#| fig-cap: "Fuente: (Baker, 2016)."
#| echo: false

knitr::include_graphics(rep("img/baker-2016.jpg"))
```

:::

::::

## Espectro de reproducibilidad

```{r}
#| label: graser-2021
#| fig-cap: "Fuente: Anita Graser, con base en (Peng, 2001)."
#| echo: false
knitr::include_graphics(rep("img/graser-2021.png"))
```

## Herramientas para escritura técnica y científica

```{r}
#| label: allaire-2022
#| fig-cap: "Fuente: (Allaire, 2022)."
#| echo: false
knitr::include_graphics(rep("img/allaire-2022.png"))
```

## Markdown

- Lenguaje de marcado ligero ampliamente utilizado en comunicación científica, documentación de programas e investigación reproducible.
- Se convierte fácilmente al lenguaje de marcado de hipertexto (HTML), el más utilizado para escribir páginas web.
- Se combina con otros lenguajes de marcado y de programación.
- Puede exportarse a muchos formatos de salida (PDF, MS Word, HTML, MS PowerPoint, ePub, Libre Office, etc.).

## Ejemplo de documento Markdown

:::: {.columns}

::: {.column width="50%"}

````md
### Título
#### Subtítulo
Texto normal  
**Texto en negrita**  
*Texto en itálica*

[Enlace a sitio web](https://simocute.go.cr)
![](img/perro.jpg)

````

:::

::: {.column width="50%"}

### Título
#### Subtítulo
Texto normal  
**Texto en negrita**  
*Texto en itálica*

[Enlace a sitio web](https://simocute.go.cr)

![](img/perro.jpg)

:::

::::

## R
- Es un lenguaje de programación enfocado en análisis estadístico.
- Es utilizado en diversas áreas de investigación, incluyendo ciencia de datos, *big data* y aprendizaje automático.
- Se distribuye como software libre.
- Cuenta con varias bibliotecas especializadas en graficación estadística y manejo y análisis de datos geoespaciales.

## Quarto
- Es un sistema de publicación de documentos técnicos y científicos, basado en código abierto.
- Combina código en R (Python, Julia y Observable), y sus salidas (ej. tablas, gráficos, mapas), con Markdown.
- Es la "siguiente generación" de R Markdown.
- Se utiliza para publicar artículos académicos, reportes, presentaciones, sitios web, *blogs* y libros en HTML, PDF, LaTeX, MS Word, ePub y otros formatos.
- Puede crear contenido científico, incluyendo ecuaciones, citas bibliográficas, referencias cruzadas y figuras.

## Documento Quarto (código fuente)

````md
---
title: "Visualización de datos de COVID"
format: 
  html:
    toc: true
    code-fold: false
---

Relación entre cantidades de pacientes de [COVID-19](https://es.wikipedia.org/wiki/COVID-19) hospitalizados en **salón** y en **UCI**.

```{r}`r ''`
#| label: graficacion-covid
#| include: true
#| echo: false

# Carga de archivo CSV con datos de COVID en Costa Rica
covid_general<- read.csv("datos/05_30_22_CSV_GENERAL.csv", sep = ";")

# Conversión de str a Date de la columna fecha
covid_general$FECHA <- as.Date(covid_general$FECHA, format = "%d/%m/%Y")

# Gráfico de dispersión
plot(
  x = covid_general$salon,
  y = covid_general$UCI,
  pch = 16,  
  col = factor(format(covid_general$FECHA, "%Y")),  # color de los puntos con base en el año
  main = "Pacientes en salón vs pacientes en UCI al 2020-05-30",
  xlab = "Pacientes hospitalizados en salón",
  ylab = "Pacientes hospitalizados en UCI"
)

# Leyenda
legend(
  x = "topleft",
  inset = 0.03,
  pch = 16,
  legend = levels(factor(format(covid_general$FECHA, "%Y"))),
  col = seq_along(factor(format(covid_general$FECHA, "%Y")))
)
```
````

## Documento Quarto (salida)

Relación entre cantidades de pacientes de [COVID-19](https://es.wikipedia.org/wiki/COVID-19) hospitalizados en **salón** y en **UCI**.

```{r}
#| label: graficacion-covid
#| include: true
#| echo: false

# Carga de archivo CSV con datos de COVID en Costa Rica
covid_general<- read.csv("datos/05_30_22_CSV_GENERAL.csv", sep = ";")

# Conversión de str a Date de la columna fecha
covid_general$FECHA <- as.Date(covid_general$FECHA, format = "%d/%m/%Y")

# Gráfico de dispersión
plot(
  x = covid_general$salon,
  y = covid_general$UCI,
  pch = 16,  
  col = factor(format(covid_general$FECHA, "%Y")),  # color de los puntos con base en el año
  main = "Pacientes en salón vs pacientes en UCI al 2020-05-30",
  xlab = "Pacientes hospitalizados en salón",
  ylab = "Pacientes hospitalizados en UCI"
)

# Leyenda
legend(
  x = "topleft",
  inset = 0.03,
  pch = 16,
  legend = levels(factor(format(covid_general$FECHA, "%Y"))),
  col = seq_along(factor(format(covid_general$FECHA, "%Y")))
)
```

## Git
- Es un sistema de control de versiones que permite mantener el registro de cambios realizados en archivos de código fuente o de cualquier otro tipo.
- Permite recuperar versiones anteriores de un archivo.
- Permite manterner versiones paralelas (*branches*) de un archivo.
- Facilita el trabajo colaborativo, al integrar las modificaciones implementadas por varias personas.

## GitHub
- Es una plataforma web para alojar el código fuente y la documentación de proyectos que utilizan el sistema de control de versiones Git.
- Es la plataforma más popular de colaboración de proyectos de código abierto.
- Ofrece servicios adicionales como alojamiento de sitios web.
- Los servicios tienen una plan gratuito que puede ser suficiente para los requerimientos de muchos proyectos.

## Propuesta para el desarrollo de un sitio para la EVM en SIMOCUTE
- Desarrollo en Quarto (R + Markdown).
- Alojamiento en GitHub.
- Desarrollo colaborativo a través de un equipo de trabajo.
- Capacitación.

## FIESTA
- Forest Inventory Estimation for Analysis (FIESTA) es un paquete de R que apoya la metodología de EVM.
- Fue desarrollado por el Servicio Forestal de Estados Unidos.

## Propuesta para la sistematización de la documentación de FIESTA
- Elaboración de documentos en Quarto (R + Markdown).
- Traducción al español.
- Desarrollo de un caso de estudio detallado.
- Alojamiento en GitHub.
- Desarrollo colaborativo a través de un equipo de trabajo.
- Capacitación.